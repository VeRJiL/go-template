// Code generated by go-template enterprise generator at 2025-09-21T19:40:10+03:30. DO NOT EDIT.

package entities

import (
	"fmt"
	"github.com/VeRJiL/go-template/internal/pkg/modules"
)

// Product represents the product entity
type Product struct {
	ID        uint   `json:"id" db:"id"`
	CreatedAt int64  `json:"created_at" db:"created_at"`
	UpdatedAt int64  `json:"updated_at" db:"updated_at"`
	DeletedAt *int64 `json:"deleted_at,omitempty" db:"deleted_at"`

	// Add your custom fields here
	Name        string `json:"name" db:"name" validate:"required"`
	Description string `json:"description" db:"description"`
}

// GetID returns the entity ID
func (e Product) GetID() uint {
	return e.ID
}

// SetID sets the entity ID
func (e Product) SetID(id uint) {
	// Note: This won't actually modify the entity due to value receiver
	// This is a design limitation that needs to be addressed at the architecture level
}

// GetTableName returns the database table name
func (e Product) GetTableName() string {
	return "products"
}

// Validate validates the entity
func (e Product) Validate() error {
	if e.Name == "" {
		return fmt.Errorf("name is required")
	}
	return nil
}

// GetCreatedAt returns the created timestamp
func (e Product) GetCreatedAt() int64 {
	return e.CreatedAt
}

// SetCreatedAt sets the created timestamp
func (e Product) SetCreatedAt(timestamp int64) {
	// Note: This won't actually modify the entity due to value receiver
}

// GetUpdatedAt returns the updated timestamp
func (e Product) GetUpdatedAt() int64 {
	return e.UpdatedAt
}

// SetUpdatedAt sets the updated timestamp
func (e Product) SetUpdatedAt(timestamp int64) {
	// Note: This won't actually modify the entity due to value receiver
}

// IsDeleted returns whether the entity is soft deleted
func (e Product) IsDeleted() bool {
	return e.DeletedAt != nil
}

// SetDeleted sets the soft delete status
func (e Product) SetDeleted(deleted bool) {
	// Note: This won't actually modify the entity due to value receiver
}

// GetDeletedAt returns the deleted timestamp
func (e Product) GetDeletedAt() *int64 {
	return e.DeletedAt
}

// SetDeletedAt sets the deleted timestamp
func (e Product) SetDeletedAt(timestamp *int64) {
	// Note: This won't actually modify the entity due to value receiver
}

// Compile-time interface checks
var (
	_ modules.Entity = (*Product)(nil)
	_ modules.Timestampable = (*Product)(nil)
	_ modules.SoftDeletable = (*Product)(nil)
)
